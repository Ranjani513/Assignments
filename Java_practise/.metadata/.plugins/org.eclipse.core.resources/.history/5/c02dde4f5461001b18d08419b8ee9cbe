package com.nisum.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.nisum.Employee_Management.model.Employee;
import com.nisum.service.EmployeeService;

@RestController
public class EmployeeController {
	@Autowired  
	EmployeeService employeeService;  
	//creating a get mapping that retrieves all the books detail from the database   
	@GetMapping("/employee")  
	private List<Employee> getAllEmployees()   
	{  
	return employeeService.getAllEmployees();  
	}  
	//creating a get mapping that retrieves the detail of a specific book  
	@GetMapping("/employee/{empid}")  
	private Employee getBooks(@PathVariable("bookid") int bookid)   
	{  
	return employeeService.getEmployeeById(bookid);  
	}  
	//creating a delete mapping that deletes a specified book  
	@DeleteMapping("/employee/{empid}")  
	private void deleteBook(@PathVariable("empid") int bookid)   
	{  
	employeeService.delete(bookid);  
	}  
	//creating post mapping that post the book detail in the database  
	@PostMapping("/employee")  
	private int saveBook(@RequestBody Employee emp)   
	{  
	employeeService.saveOrUpdate(emp);  
	return emp.getId();  
	}  
	//creating put mapping that updates the book detail   
	@PutMapping("/employee")  
	private Employee update(@RequestBody Employee emp)   
	{  
	employeeService.saveOrUpdate(emp);  
	return emp;  
	}  
}
